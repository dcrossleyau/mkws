# Embedding Reference Universe with MKWS

## Quick start
Simply paste this inline with the markup on any page: 

    <script src="//mkws.indexdata.com/mkws-complete.js"></script>
    <script src="//mkws.indexdata.com/mkws-widget-ru.js"></script>
    <link rel="stylesheet" type="text/css" href="//mkws.indexdata.com/mkws-widget-ru.css" />
    <div class="mkws-reference-universe" autosearch="!param!q"></div>
    
## A bit more detail 

The MasterKey Widget Set ([MKWS](http://mkws.indexdata.com/)) lets you easily embed search-enabled widgets which run in the client browser and display results from a web service. In this case, it searches Reference Universe.

You need to include two scripts: one for MKWS and one for the Reference Universe widget. This can be inline as above or you can include them in the header or aggregate them with your application's scripts.

    <script src="//mkws.indexdata.com/mkws-complete.js"></script>
    <script src="//mkws.indexdata.com/mkws-widget-ru.js"></script>
    
The provided stylesheet is generic and you're encouraged to replace it entirely by styling the new elements to fit seamlessly with your content. 

    <link rel="stylesheet" type="text/css" href="//mkws.indexdata.com/mkws-widget-ru.css" />
    
Any element you give the class `mkws-reference-universe` will have is contents replaced by the top results from a search against the Reference Universe service for the current query.
    
    <div class="mkws-reference-universe" autosearch="!param!q"></div>

### Finding the query 

The `autosearch` attribute of the widget container lets it know where to find the query. There are three places it might look to find that you're searching for *water*: 

* `!param!foo` indicates a GET parameter and would match `http://site.tld/search?foo=water`
* `!path!2` will take the 2nd path component from the end of the url and would find the query in `http://site.tld/apps/search/water/mobile`
* `!var!foo` will look for the query in a JavaScript variable named `foo` in the `window` context (ie. a top level variable)
