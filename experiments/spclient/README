An embryonic MasterKey Widget Set
=================================

This directory contains an embryonic MasterKey Widget Set, based
initially on "jsdemo" though now far removed from those beginnnings.


How this works
--------------

The goal is to make it that as much of the searching functionality as
possible is hosted on
	http://mkws.indexdata.com/
so that very simple websites such as
	http://somesite.indexdata.com/
can have MasterKey searching with minimal effort.

The following files must be hosted on mkws.indexdata.com:
	mkws.js
	mkwsStyle.css
	/libjs-pz2/pz2api.1.js (*)

The following files make up the application:
	index.html
	favicon.ico [optional]
	robots.txt [optional]

(At present, the client application's configuruation also needs an
Alias for /service-proxy/, to avoid cross-site scripting issues. We
will fix this.)

(*) if you don't have already installed libjs-pz2 on the machine, you can
do it by installing a debian package or check it out from GIT:
$ git clone ssh://git.indexdata.com:222/home/git/pub/libjs-pz2

Configuring a client
--------------------

The application's HTML must contains the following elements as well as
whatever makes up the application itself:

Prerequisites:
    <link rel="stylesheet" href="mkwsStyle.css" />
    <script type="text/javascript">
	var mkws_config = { };
    </script>
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.0.min.js"></script>
    <script type="text/javascript" src="/libjs-pz2/pz2api.1.js"></script>
    <script type="text/javascript" src="mkws.js"></script>
(Yes, we're using JQuery. We use it only in the most trivial ways, and
could probably get rid of it without too much pain. I'd like to have
mkws.js automatically pull in pz2api.1.js, too, so you don't need to
do so many things, but that's not quite trivial.)

Then the following special <div>s can be added (with no content), and
will be filled in by MKWS:
    <div id="mkwsSwitch"></div> -- switch between record and target views
    <div id="mkwsLang"></div>   -- switch between English, Danish and German
    <div id="mkwsSearch"></div> -- search box and button
    <div id="mkwsRecords"></div> -- result list, including pager/sorting
    <div id="mkwsTargets"></div> -- target list, including status
    <div id="mkwsStat"></div> -- summary statistics

At present, MKWS will not work correctly if any of these is
missing. One of the TODOs is to fix it so that it doesn't try to use
whatever is not there, and just uses what is.


You can configure and control the client with the JavaScript mkws_config object.

Here is an example of all possible options
    <script type="text/javascript">
        var mkws_config = {
                use_service_proxy: false,   /* true, flase */
		switch_menu: true, 	    /* true, false: show/hide Records|Targets menu */
		lang_menu: true, 	    /* true, false: show/hide language menu */
	        lang_display: ["en", "de", "da"], /* display languages links for given 
				                     languages, [] for all */
		termlist_menu: true, 	    /* true, false: show/hide termlist menu/facets */
                sort_default: "relevance",  /* "relevance", "title:1", "date:0", "date:1" */
		query_width: 50,	    /* 5..50 */
                perpage_default: 20,	    /* 10, 20, 30, 50 */
                lang: "en",                 /* "en", "de", "da" */
		debug: 0,     		    /* debug level for development: 0..2 */

		pazpar2_url: "/pazpar2/search.pz2",   	   /* URL */
		service_proxy_url: "/service-proxy/", 	   /* URL */
		service_proxy_auth: "/service-proxy-auth", /* URL */
         };
    </script>


Supported Browsers
------------------

Any modern HTML5 browser will work fine. JavaScript must be enabled.

* IE8 or later
* Firefox 17 or later
* Google Chrome 27 or later
* Safari 6 or later
* Opera  12 or later

Not supported: IE6, IE7

New Features since jsdemo
--------------------------
- multilinguality: English (default), Danish, German
- depends on the new pazpar2 JS library libjs-pz2/pz2api.1.js
  which will make the development of pazpar2 plugins faster and
  easier to share code between projects
- supports basic pazpar2 and service-proxy requests
- simplified HTML
- the search page is fully configurable by a JSON object


What next?
----------

Main areas of work:
* Fix cross-site issues proper
* Make MKWS robust to missing widgets
* Make CSS more tightly targeted at MKWS elements only
* Make CSS prettier
* Embed in a real, existing, site
* Clean up the code
